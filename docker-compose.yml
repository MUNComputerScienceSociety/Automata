version: '3'

volumes:
    prometheus_data: {}
    grafana_data: {}
    mongo_data: {}

services:
  automata:
    image: muncs/automata
    restart: always
    volumes:
      - ./mounted_plugins:/app/mounted_plugins
    depends_on:
      - mongo
    env_file:
      - .env
  mongo:
    image: mvertes/alpine-mongo
    restart: always
    volumes:
      - mongo_data:/data/db
  prometheus:
    image: prom/prometheus
    volumes:
      - prometheus_data:/prometheus
      - ./config/prometheus:/etc/prometheus
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
      - "--storage.tsdb.path=/prometheus"
      - "--web.console.libraries=/usr/share/prometheus/console_libraries"
      - "--web.console.templates=/usr/share/prometheus/consoles"
      - "--storage.tsdb.retention.time=1y"
    restart: always
  grafana:
    image: grafana/grafana
    depends_on:
      - prometheus
    expose:
      - 3000
    networks:
      - web
      - default
    restart: always
    environment:
      - GF_AUTH_ANONYMOUS_ENABLED=true
    volumes:
      - grafana_data:/var/lib/grafana
    labels:
      - "traefik.enable=true"
      - "traefik.frontend.rule=Host(`stats.muncompsci.ca`)"
      - "traefik.port=3000"
      - "traefik.frontend.entryPoints=https"
      - "traefik.docker.network=web"
  mongodbexporter:
    image: eses/mongodb_exporter
    restart: always
    depends_on:
      - mongo
    environment:
      - MONGODB_URI=mongodb://mongo/
  cadvisor:
    image: google/cadvisor
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
    command:
      - "--docker_only=true"

networks:
  web:
    external: true
